Stream概述

是用函数式编程方式在集合类上进行复杂操作的工具，更像一个高级版本的 Iterator

原始版本的 Iterator，用户只能显式地一个一个遍历元素并对其执行某些操作

高级版本的 Stream，用户只要给出需要对其包含的元素执行什么操作

Stream 会隐式地在内部进行遍历，做出相应的数据转换

而和迭代器又不同的是，Stream 可以并行化操作

借助于 Lambda 表达式，极大的提高编程效率和程序可读性

5.常用操作

a.forEach

迭代集合中元素。接收一个 Lambda 表达式

然后在 Stream 的每一个元素上执行该表达式

此操作是及早求值方法

b.collect(toList())

由Stream 里的值生成一个列表，是一个及早求值操作

很多Stream 操作都是惰性求值，因此调用Stream 一系列方法之后

还需最后再调用一个类似collect 的及早求值方法返回集合

开篇的例子：(再将符合要求的字符串放到一个新的集合里)

使用filter过滤器：遍历数据并检查其中的元素